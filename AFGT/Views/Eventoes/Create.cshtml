@model AFGT.Models.Evento

@{
    ViewBag.Title = "Create";
}


<h2>Create Event</h2>


@using (Html.BeginForm("Create", "Eventoes", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()
   

    <div class="form-horizontal">
      
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        
            <div class="form-group">
                @Html.LabelFor(model => model.NomeEvento, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.NomeEvento, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.NomeEvento, "", new { @class = "text-danger" })
                </div>
            </div>


                <div class="form-group">
                @Html.LabelFor(model => model.Morada.Endereco, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        
                        @Html.EditorFor(model => model.Morada.Endereco, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Morada, "", new { @class = "text-danger" })
                    </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.Morada.Cidade, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                
                            @Html.EditorFor(model => model.Morada.Cidade, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Morada, "", new { @class = "text-danger" })
                        </div>
                        </div>
                        <div class="form-group" id="helpme">
                            <a data-toggle="tooltip" class="tooltipLink" data-original-title="Contem 8 caracteres: 0000-000">
                                <span class="glyphicon glyphicon-info-sign"></span>
                            </a>
                            @Html.LabelFor(model => model.Morada.CodPostal, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                               
                                @Html.EditorFor(model => model.Morada.CodPostal, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Morada, "", new { @class = "text-danger" })
                            </div>
                            </div>
                        

            <div class="form-group">

                @Html.LabelFor(model => model.Descricao, htmlAttributes: new { @class = "control-label col-md-2" })

                <div class="col-md-10">
                    @Html.EditorFor(model => model.Descricao, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Descricao, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group" id="helpme">
                <a data-toggle="tooltip" class="tooltipLink" data-original-title="Date: DD/MM/YYYY HH:MM:SS">
                    <span class="glyphicon glyphicon-info-sign"></span>
                </a>
                @Html.LabelFor(model => model.Data, htmlAttributes: new { @class = "control-label col-md-2" })

                <div class="col-md-10">
                    @Html.EditorFor(model => model.Data, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Data, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                <!--artista-->
                @Html.LabelFor(model => model.Artistas, htmlAttributes: new { @class = "control-label col-md-2" })
               
                <div class="control-label col-md-10" id="tagsssbox">
                    @*@Html.EditorFor(model => model.Artistas, new { htmlAttributes = new { @class = "form-control" } })*@

                  
                        
                      <ul id="xcxcxc" placeholder="Insert artists here...">
                       
                       
                      </ul>
                   
                       
                    

                        @*@Html.ValidationMessageFor(model => model.Artistas, "", new { @class = "text-danger" })*@

                       
                    </div>
                
            </div>
          
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" /><span><input type="submit" value="Add Artists" class="btn btn-default" /></span>
            </div>
        </div>

        </div>        
        
        

}
        <div>
          

            @Html.ActionLink("Back to List", "Index")
        </div>



@section Styles {
    <link rel="stylesheet" href="~/Content/jquery.tagit.css">
    <link rel="stylesheet" href="~/Content/tagit.ui-zendesk.css">
}

@section Scripts {
    <script src="https://ajax.googleapis.com/ajax/libs/jqueryui/1.9.2/jquery-ui.min.js" type="text/javascript" charset="utf-8"></script>
    <script src="~/Scripts/tag-it.min.js"></script>

    <script>
        $("a.tooltipLink").tooltip();

        var z = $(document).ready(function () {
            $('#xcxcxc').tagit({
               
                allowSpaces: true,
                tagLimit: 500,
                autocomplete: "Insere aqui os teus artistas..."
                 

            });
        });
        //z.appendTo("<button>"); 

        //afterTagAdded(funcion (){
        //      fazer funcao para elogiar asescolhas dos artistas depois de introduzidas as tags
        //}): 


        //$.ajax({
        //    url: '/Questions/GetTags',
        //    dataType: 'json',
        //    success: function (data) {
        //        //data should be a json object that returns an array
        //        $('#xcxcxc').tagit({
        //            availableTags: data
        //        });
        //    }
        //});

    </script>
    
}
